# swagger.yaml

swagger: "2.0"
info:
  version: 1.0.0
  title: Swagger Practice App
  license:
    name: Proprietary
basePath: /v1
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
  - https

paths:
  /swagger.json:
    get:
      tags:
        - Spec
      operationId: retrieveSpec
      description: Retrieve OpenAPI spec
      responses:
        "200":
          description: Successful
          schema:
            type: object
  /register:
    post:
      operationId: adminRegisterUser
      description: Admin registers a new user
      tags:
        - Register
      parameters:
        - in: body
          name: user
          required: true
          schema:
            $ref: "#/definitions/UserRegisterBase"
      responses:
        "200":
          description: User is Registered
          schema:
            type: object
        "400":
          description: Bad Request
        default:
          description: Unexpected Error
  /login:
    post:
      operationId: userLogIn
      description: User logs in
      tags:
        - LogIn
      parameters:
        - in: body
          name: user
          required: true
          schema:
            $ref: "#/definitions/UserLogInBase"
      responses:
        "200":
          description: User is Logged In
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: object
        default:
          description: Unexpected Error
          schema:
            type: object
  /posts:
    get:
      operationId: getPosts
      description: Get all posts
      tags:
        - GetPosts
      responses:
        "200":
          description: List of Posts
          schema:
            $ref: "#/definitions/PostsBase"
        "400":
          description: Bad Request
          schema:
            type: object
        default:
          description: Unexpected Error
          schema:
            type: object
  /posts/create:
    post:
      operationId: createPost
      description: Create a post
      tags:
        - CreatePosts
      parameters:
        - in: body
          name: post          
          required: true
          schema:
            $ref: "#/definitions/CreatePostBase"
      responses:
        "200":
          description: Created a post
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
        default:
          description: Unexpected Error
          schema:
            type: object

definitions:
  PostsBase:
    type: array
  CreatePostBase:
    type: object
    required:
      - author
      - title
      - body
    properties:
      author:
        type: string
      title:
        type: string
      body:
        type: string
  UserRegisterBase:
    type: object
    required:
      - password
      - email
      - userId
      - userIdType
      - payload
      - accountNumber    
    properties:
      password:
        type: string
      email:
        type: string
      userId:
        type: string
      userIdType:
        type: string
      payload:
        type: string
      accountNumber:
        type: string
  UserLogInBase:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string
